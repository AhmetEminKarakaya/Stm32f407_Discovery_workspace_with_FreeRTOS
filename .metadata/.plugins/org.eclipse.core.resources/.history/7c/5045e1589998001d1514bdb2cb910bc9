#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

#include "FreeRTOS.h"
#include "task.h"


TaskHandle_t myTask1Handle = NULL;
TaskHandle_t myTask2Handle = NULL;

void Sys_Config();
void GPIO_Config();

void Task1Handle(void *params);
void Task2Handle(void *params);

void vApplicationIdleHook(){
	__WFI();

}

int main(void)
{

	RCC_DeInit();

	SystemCoreClockUpdate();

	Sys_Config();

	xTaskCreate(Task1Handle, "Task1",configMINIMAL_STACK_SIZE, NULL , 2 ,&myTask1Handle);
	xTaskCreate(Task2Handle,"Task2",configMINIMAL_STACK_SIZE,NULL,&myTask2Handle);

	vTaskStartScheduler();

  while (1)
  {

  }
}

void Task1Handle(void *params){

	while(1){


	}

}

void Task2Handle(void *params){

	while(1){



	}
}

void Sys_Config(){

	GPIO_Config();
}

void GPIO_Config(){

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);

	GPIO_InitTypeDef GPIO_Init_Struct = {0};

	GPIO_Init_Struct.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_Init_Struct.GPIO_OType = GPIO_OType_PP;
	GPIO_Init_Struct.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
	GPIO_Init_Struct.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init_Struct.GPIO_Speed = GPIO_Speed_100MHz;

	GPIO_Init(GPIOD,&GPIO_Init_Struct);


}

void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}



uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
