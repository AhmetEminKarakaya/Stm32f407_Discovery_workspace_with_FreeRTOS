#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

#include "FreeRTOS.h"
#include "task.h"


#include <string.h>
#include <stdio.h>

TaskHandle_t myTask1Handle = NULL;
TaskHandle_t myTask2Handle = NULL;

char mymessage[100];
uint8_t buttonstate = 0;

void Sys_Init();
void GPIO_Config();
void USART_Config();

void Task1Handler(void *params);
void Task2Handler(void *params);



int main(void)
{

	RCC_DeInit();

	SystemCoreClockUpdate();

	Sys_Init();

	xTaskCreate(Task1Handler, "Task1",configMINIMAL_STACK_SIZE,NULL,2,&myTask1Handle);

	xTaskCreate(Task2Handler, "Task2", configMINIMAL_STACK_SIZE, NULL,3,&myTask2Handle);

	vTaskStartScheduler();


  while (1)
  {

  }

}

void Task1Handler(void *params){

	while(1){


	}

}

void Task2Handler(void *params){

	while(1){

	}

}

void Sys_Init(){

	GPIO_Config();
	USART_Config();

}

void GPIO_Config(){


}

void USART_Config(){




}



void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}


uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
